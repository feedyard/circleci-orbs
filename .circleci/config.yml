---
version: 2.1

workflows:
  circleci-orbs-pipeline:
    jobs:
      - dev-release:
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/

orbs:
  slack: circleci/slack@0.1.8

executors:

  circleci-orb:
    docker:
      - image: quay.io/feedyard/circleci-orb-agent
    environment:
      BASH_ENV: local.env


jobs:

  dev-release:
    executor: circleci-orb
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: setup
          command: openssl aes-256-cbc -d -in env.ci -out local.env -k $FEEDYARD_CIRCLECI_ENC
      - run:
          name: lint
          command: yamllint .
      - run:
          name: validate orb.yaml
          command: ash scripts/validate_orbs.sh
#      - run:
#          name: publish dev version
#          command: |
#            for ORB in src/*; do
#              echo "Dev release $ORB ..."
#
#              if circleci orb list $CIRCLE_PROJECT_USERNAME | grep -q '$ORB'; then
#                 echo "first time orb published"
#                 circleci orb create $CIRCLE_PROJECT_USERNAME/$ORB --token $CIRCLECI_API_TOKEN; RETURN_CODE=$?
#                 if $RETURN_CODE != 0; then
#                   exit 1
#                 fi
#              fi
#
#              circleci orb publish $CIRCLE_PROJECT_USERNAME/$ORB@dev:$CIRCLE_SHA1 --token $CIRCLECI_API_TOKEN; RETURN_CODE=$?
#              if $RETURN_CODE != 0; then
#                exit 1
#              fi
#
#              circleci orb publish $CIRCLE_PROJECT_USERNAME/$ORB@dev:latest --token $CIRCLECI_API_TOKEN; RETURN_CODE=$?
#              if $RETURN_CODE != 0; then
#              	exit 1
#              fi
#            done
      - run:
          name: step test
          command: |
            echo $TEST_ENV
            for ORB in src/*; do
              orbname=$(basename $ORB)
              if ! circleci orb list $CIRCLE_PROJECT_USERNAME | grep -q $orbname; then
                echo "new orb dev release for $CIRCLE_PROJECT_USERNAME/$orbname"
                circleci orb create $CIRCLE_PROJECT_USERNAME/$orbname --token $CIRCLECI_API_TOKEN; RETURN_CODE=$?
              fi
            done
