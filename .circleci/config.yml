---
version: 2.1

orbs:
  common-tasks: feedyard/common-pipeline-tasks@0.1.2

workflows:
  version: 2

  circleci-orbs-pipeline:
    jobs:
      - dev-release
      - approve-publish:
          type: approval
          requires:
            - dev-release
      - publish:
          requires:
            - approve-publish

executors:

  circleci-orb-agent:
    docker:
      - image: quay.io/feedyard/circleci-orb-agent
    environment:
      BASH_ENV: local.env


jobs:

  dev-release:
    executor: circleci-orb-agent
    steps:
      - checkout
      - setup_remote_docker
      - common-tasks/decrypt-env
      - run:
          name: validate yaml
          command: yamllint .
      - run:
          name: validate orbs
          command: |
            for ORB in src/*; do
              echo "Validating $ORB"
              circleci orb validate $ORB/orb.yaml
            done
      - run:
          name: SHA1/latest development release
          command: |
            for ORB in src/*; do
              orbname=$(basename $ORB)
              circleci orb source $CIRCLE_PROJECT_USERNAME/$orbname@dev:latest > $orbname.latest
              if [[ $(diff <(printf %s "$(< $ORB/orb.yaml)") <(printf %s "$(< $orbname.latest)")) ]]; then
                echo "dev-release of $CIRCLE_PROJECT_USERNAME/$orbname"
                circleci orb publish $ORB/orb.yaml $CIRCLE_PROJECT_USERNAME/$orbname@dev:$CIRCLE_SHA1 --token $CIRCLECI_API_TOKEN
                circleci orb publish $ORB/orb.yaml $CIRCLE_PROJECT_USERNAME/$orbname@dev:latest --token $CIRCLECI_API_TOKEN
              fi
            done

  publish:
    executor: circleci-orb-agent
    steps:
      - checkout
      - setup_remote_docker
      - common-tasks/decrypt-env
      - run:
          name: publish incremental orb version
          command: |
            for ORB in src/*; do
              orbname=$(basename $ORB)
              semver=patch
              circleci orb source $CIRCLE_PROJECT_USERNAME/$orbname@volatile > $orbname.volatile
              if [[ $(diff <(printf %s "$(< $ORB/orb.yaml)") <(printf %s "$(< $orbname.volatile)")) ]]; then
                ls $ORB/minor >> /dev/null 2>&1 && semver=minor; ls $ORB/major >> /dev/null 2>&1 && semver=major
                echo "publish $CIRCLE_PROJECT_USERNAME/$orbname $semver"
                circleci orb publish promote $CIRCLE_PROJECT_USERNAME/$orbname@dev:latest $semver --token $CIRCLECI_API_TOKEN
              fi
            done
