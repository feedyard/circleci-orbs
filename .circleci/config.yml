---
version: 2.1

workflows:
  circleci-orbs-pipeline:
    jobs:
      - dev-release
      - approve-publish:
          type: approval
          requires:
            - dev-release
      - publish:
          requires:
            - approve-publish

executors:

  circleci-orb-agent:
    docker:
      - image: quay.io/feedyard/circleci-orb-agent
    environment:
      MSG_IDENTIFIER: TEAM
      ORB_IDENTIFIER: orb!
      SEMVER_IDENTIFIER: level!
      BASH_ENV: local.env


jobs:

  dev-release:
    executor: circleci-orb-agent
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: decrypt secrets
          command: openssl aes-256-cbc -d -in env.ci -out local.env -k $FEEDYARD_CIRCLECI_ENC
      - run:
          name: validate yaml
          command: yamllint .
      - run:
          name: validate orbs
          command: ash scripts/validate_orbs.sh
      - run:
          name: SHA1/latest development release
          command: |
            for ORB in src/*; do
              orbname=$(basename $ORB)
              # dev release using SHA1 as release version
              circleci orb publish ${ORB}/orb.yaml $CIRCLE_PROJECT_USERNAME/$orbname@dev:$CIRCLE_SHA1 --token $CIRCLECI_API_TOKEN
              # dev release using 'latest' as release version
              circleci orb publish ${ORB}/orb.yaml $CIRCLE_PROJECT_USERNAME/$orbname@dev:latest --token $CIRCLECI_API_TOKEN
            done

  publish:
    executor: circleci-orb-agent
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: decrypt secrets
          command: openssl aes-256-cbc -d -in env.ci -out local.env -k $FEEDYARD_CIRCLECI_ENC
      - run:
          name: publish incremental orb version
          command: |
            commit_msg=$(git show | grep $MSG_IDENTIFIER)
            orbname=$(git show | awk -v id="$ORB_IDENTIFIER" '{for(i=1;i<=NF;i++)if($i~id)print $(i+1)}')
            semver=$(git show | awk -v id="$SEMANTIC_IDENTIFIER" '{for(i=1;i<=NF;i++)if($i~id)print $(i+1)}')
            echo $commit_msg
            echo $orbname
            echo $semver
#            if [ $commit_msg ]; then
#              echo $commit_msg
#              orbname=$(git show | awk -v id="$ORB_IDENTIFIER" '{for(i=1;i<=NF;i++)if($i~id)print $(i+1)}')
#              if [ $orbname ]; then
#                echo $orbname
#                semver=$(git show | awk -v id="$SEMANTIC_IDENTIFIER" '{for(i=1;i<=NF;i++)if($i~id)print $(i+1)}')
#                if [ $semver ]; then
#                  echo $semver
#                else
#                  echo 'no semver'
#                  exit 1
#                fi
#              else
#                echo 'no orbname'
#                exit 1
#              fi
#            else
#              echo 'no commit message'
#              exit 1
#            fi
