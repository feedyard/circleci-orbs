---
version: 2.1

description: |
  Feedyard terraform is an example set of commands and jobs for managing terraform infrastructure pipelines.
  Orb source code - https://github.com/feedyard/circleci-orbs/blob/master/src/common-pipeline-tasks/orb.yaml

examples:

  standard-terraform-pipeline:
    description: |
      Set of jobs that support the standard terraform pipeline workflow in an aws context. Assumes use of either
      awspec or inspec for aws configuration testing (default is awspec).
      NOTE: Parameter bucket-region is to indicate the aws region of the terraform state s3 bucket.
    usage:
      version: 2.1
      orbs:
        common-tasks: feedyard/terraform-pipeline-tasks@0.0.1
      workflows:
        terraform-pipeline:
          jobs:
            - terraform/plan:
                name: qa-release-plan
                prefix: "prefix name"
                account: "account short name"
                env: "env name"
                region: us-east-1
                bucket-region: us-east-2
                filters:
                  branches:
                    ignore: /.*/
                  tags:
                    only: /.*/
            - approve-qa-release-plan:
                type: approval
                requires:
                  - qa-release-plan
            - terraform/apply:
                name: apply-qa-release-plan
                prefix: "prefix name"
                account: "account short name"
                env: "env name"
                region: us-east-1
                bucket-region: us-east-2
                requires:
                  - approve-qa-release-plan

orbs:
  common-tasks: feedyard/common-pipeline-tasks@0.1.4

executors:

  circleci-infra-agent:
    description: The circleci agent container to use when running aws infrastructure pipelines jobs
    docker:
      - image: quay.io/feedyard/circleci-infra-agent
    environment:
      BASH_ENV: local.env

commands:

  setup-job:
    description: prepare terraform job
    parameters:
      region:
        description: aws region provisioned and tested
        type: string
        default: $AWS_REGION
    steps:
      - checkout
      - setup_remote_docker
      - common-tasks/decrypt-env
      - common-tasks/setup-aws-credentials:
          aws-region: << parameters.region >>

jobs:

  plan:
    description: Run terraform plan for << parameters.env >>
    executor: circleci-infra-agent
    parameters:
      prefix:
        description: prefix used to identify product or team managing the infrastructure
        type: string
        default: $PREFIX
      account:
        description: s3 bucket name
        type: string
        default: $DEFAULT_ACCOUNT
      pipeline:
        description: by convention, state info for an infrastructure pipeline is named as the repo containing the pipeline code
        type: string
        default: $CIRCLE_PROJECT_REPONAME
      env:
        description: infrastructure environment name
        type: string
        default: $DEFAULT_ENV
      statefile:
        description: by convention, state files are named terraform
        type: string
        default: terraform
      region:
        description: aws region provisioned and tested
        type: string
        default: $AWS_REGION
      bucket-region:
        description: aws region of terrafrom state s3 bucket
        type: string
        default: $BUCKET_REGION
    steps:
      - setup-job:
          region: << parameters.region >>
      - run:
          name: terraform init
          command: terraform init -backend-config="key=<< parameters.pipeline >>/<< parameters.env >>/<< parameters.statefile >>.tfstate" -backend-config="bucket=<< parameters.prefix >>-<< parameters.account >>-tf-state" -backend-config="region=<< parameters.bucket-region >>"
      - run:
          name: terraform plan
          command: terraform plan -var-file="<< parameters.env >>.json"

  apply:
    description: Run terraform apply for << parameters.env >>
    executor: circleci-infra-agent
    parameters:
      prefix:
        description: prefix used to identify product or team managing the infrastructure
        type: string
        default: $PREFIX
      account:
        description: s3 bucket name
        type: string
        default: $DEFAULT_ACCOUNT
      pipeline:
        description: by convention, state info for an infrastructure pipeline is named as the repo containing the pipeline code
        type: string
        default: $CIRCLE_PROJECT_REPONAME
      env:
        description: infrastructure environment name
        type: string
        default: $DEFAULT_ENV
      statefile:
        description: by convention, state files are named terraform
        type: string
        default: terraform
      region:
        description: aws region provisioned and tested
        type: string
        default: $AWS_REGION
      bucket-region:
        description: aws region of terrafrom state s3 bucket
        type: string
        default: $BUCKET_REGION
      inspec:
        description: aws testing framework to use in performing the test
        type: boolean
        default: false
    steps:
      - setup-job:
          region: << parameters.region >>
      - run:
          name: terraform init
          command: terraform init -backend-config="key=<< parameters.pipeline >>/<< parameters.env >>/<< parameters.statefile >>.tfstate" -backend-config="bucket=<< parameters.prefix >>-<< parameters.account >>-tf-state" -backend-config="region=<< parameters.bucket-region >>"
      - run:
          name: terraform apply -auto-approve
          command: terraform apply -var-file="<< parameters.env >>.json" -auto-approve
      - when:
          name: use inspec framework
          condition: << parameters.inspec >>
          steps:
            - run:
                name: use inspec to validate aws configuration
                environment:
                  PLATFORM_ENV: << parameters.env >>
                command: inspec exec test/integration/ -t aws://
      - unless:
          name: use awspec framework
          condition: << parameters.inspec >>
          steps:
            - run:
                name: use awspec to validate aws configuration
                environment:
                  PLATFORM_ENV: << parameters.env >>
                  AWS_REGION: << parameters.region >>
                command: rspec test/integration/

  destroy:
    description: Run terraform destroy for << parameters.env >>
    executor: circleci-infra-agent
    parameters:
      prefix:
        description: prefix used to identify product or team managing the infrastructure
        type: string
        default: $PREFIX
      account:
        description: s3 bucket name
        type: string
        default: $DEFAULT_ACCOUNT
      pipeline:
        description: by convention, state info for an infrastructure pipeline is named as the repo containing the pipeline code
        type: string
        default: $CIRCLE_PROJECT_REPONAME
      env:
        description: infrastructure environment name
        type: string
        default: $DEFAULT_ENV
      statefile:
        description: by convention, state files are named terraform
        type: string
        default: terraform
      region:
        description: aws region of terrafrom state s3 bucket
        type: string
        default: $AWS_REGION
      bucket-region:
        description: aws region of terrafrom state s3 bucket
        type: string
        default: $BUCKET_REGION
    steps:
      - setup-job:
          region: << parameters.region >>
      - run:
          name: terraform init
          command: terraform init -backend-config="key=<< parameters.pipeline >>/<< parameters.env >>/<< parameters.statefile >>.tfstate" -backend-config="bucket=<< parameters.prefix >>-<< parameters.account >>-tf-state" -backend-config="region=<< parameters.bucket-region >>"
      - run:
          name: terraform destroy
          command: terraform destroy -var-file="<< parameters.env >>.json" -auto-approve
